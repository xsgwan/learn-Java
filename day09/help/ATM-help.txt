ATM:
	定义一个账户类Account,至少需要包含（卡号、姓名、性别、密码、余额、每次取现额度）
	定义一个ATM类，用来代表ATM系统，负责提供所有的业务需求，比如：展示ATM的系统欢迎页、开通账户
	定义一个测试类Test,负责对我们开发的ATM系统进行测试。
	createAccount()
		创建一个Account账户对象，负责封装用户的账户信息（姓名、性别、密码、卡号等等）。
		卡号需要由系统自动生成（卡号要求是8位的数字组成的，且不能重复)
		把账户对象存入到账户集合中去。
		提示开户成功！
		createCardId():		账号生成新卡号
			循环生成8位随机数，作为卡号
				getAcountByCardId(String cardId)根据卡号去acounts集合中去找账户，
					找到返回acount，未找到返回null
			调用getAcountByCardId()赋值给acount,
				若acount等于null,则表明卡号与acounts列表中其他账户无重复,
					则新卡号生成
				若acount不等于null,则表明卡号与acounts列表中其他账户重复,
					通过循环重新随机生成卡号，再进行判断
	login()
		先判断acounts集合是否为空，是则提醒用户去开户，return; 结束方法
		再通过两个死循环实现输入正确的卡号以及密码，两者都正确，则通过return; 结束方法
			判断卡号是否正确逻辑:	通过getAcountByCardId(输入的卡号),返回值为null；则未找到，即卡号错误
				反之卡号正确
	showUserCommand()
		显示操作面板
		switch{
			case 1:
				showLoginAcount();
				break;
			case 2:
				deposit();
				break;
			case 3:
				withdrawal();
				break;
	showLoginAcount()
		用户账号信息
	deposit()
		money=sc.nextDouble();
		loginAcount.setMoney(loginAcount.getMoney() + money);
	withdrawal()
		判断余额是否大于100
			<	return;
		死循环
			判断余额是否足够；判断是否超过每次提现额度；
				loginAcount.setMoney(loginAcount.getMoney() - money);
