String类:(java.lang.String)
	构造器:
		public string()					创建一个空白字符串对象，不含有任何内容
		public string(String original)			根据传入的字符串内容，来创建字符串对象
		public string(char[]chars)			根据字符数组的内容，来创建字符串对象
		public String(byte[]bytes)			根据字节数组的内容，来创建字符串对象
	常用方法:
		public int length()				获取字符串的长度返回（就是字符个数）
		public char charAt(int index)			获取某个索引位置处的字符返回
		public char[] toCharArray():			将当前字符串转换成字符数组返回
		public boolean equals(Object anobject)		判断当前字符串与另一个字符串的内容一样，一样返回tue
		public boolean equalsIgnoreCase(String anotherstring)
								判断当前字符串与另一个字符串的内容是否一样（忽略大小写）
		public String substring(int beginIndex,int endIndex)
								根据开始和结束索引进行截取，得到新的字符串（包前不包后)
		public String substring(int beginIndex)		从传入的索引处截取，截取到未尾，得到新的字符串返回
		public String replace(CharSequence target,CharSequence replacement)
								使用新值，将字符串中的旧值替换，得到新的字符串
		public boolean contains(CharSequence s)		判断字符串中是否包含了某个字符串
		public boolean startswith(String prefix)	判断字符串是否以某个字符串内容开头，开头返回tue,反之
		public String[]split(String regex)		把字符串按照某个字符串内容分割，并返回字符串数组回来
	注意事项:
		String对象的内容不可改变，被称为不可变字符串对象。
			结论：	
				每次试图改变字符串对象实际上是新产生了新的字符串对象了，
				变量每次都是指向了新的字符串对象，之前字符串对象的内容确实是设有改变的，
				因此说String的对象是不可变的。
		只要是以"···"方式写出的字符串对象，会存储到字符串常量池，且相同内容的字符串只存储一份；(节约内存)
			Java存在编译优化机制，程序在编译时："a"+"b"+"c"会直接转成"abc",以提高程序的执行性能
		但通过new方式创建字符串对象，每new一次都会产生一个新的对象放在堆内存中。
